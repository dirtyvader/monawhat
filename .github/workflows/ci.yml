name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Configure uv cache
        uses: actions/cache@v3
        with:
          path: ./.uv-cache
          key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-${{ matrix.python-version }}-

      - name: Configure mypy cache
        uses: actions/cache@v3
        with:
          path: ./.mypy_cache
          key: ${{ runner.os }}-mypy-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-mypy-${{ matrix.python-version }}-

      - name: Configure pytest cache
        uses: actions/cache@v3
        with:
          path: ./.pytest_cache
          key: ${{ runner.os }}-pytest-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pytest-${{ matrix.python-version }}-

      - name: Configure ruff cache
        uses: actions/cache@v3
        with:
          path: ./.ruff_cache
          key: ${{ runner.os }}-ruff-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-ruff-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          uv sync --locked

      - name: Lint with ruff
        run: |
          uv run ruff check .

      - name: Type check with mypy
        run: |
          uv run mypy --strict .

      - name: Test with pytest
        run: |
          uv run pytest --cov=src tests/

  docs:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Configure uv cache
        uses: actions/cache@v3
        with:
          path: ./.uv-cache
          key: ${{ runner.os }}-uv-docs-${{ hashFiles('pyproject.toml') }}

      - name: Install dependencies
        run: |
          uv sync --locked

      - name: Build docs
        run: |
          cd docs
          make html

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Configure uv cache
        uses: actions/cache@v3
        with:
          path: ./.uv-cache
          key: ${{ runner.os }}-uv-build-${{ hashFiles('pyproject.toml') }}

      - name: Install dependencies
        run: |
          uv sync --locked

      - name: Build package
        run: |
          uv build

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/
